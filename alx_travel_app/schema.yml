openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/booking/:
    get:
      operationId: api_booking_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
          description: ''
    post:
      operationId: api_booking_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Booking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Booking'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
  /api/booking/{booking_id}:
    get:
      operationId: api_booking_retrieve
      parameters:
      - in: path
        name: booking_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this booking.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
    put:
      operationId: api_booking_update
      parameters:
      - in: path
        name: booking_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this booking.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Booking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Booking'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
    patch:
      operationId: api_booking_partial_update
      parameters:
      - in: path
        name: booking_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this booking.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBooking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBooking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBooking'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
    delete:
      operationId: api_booking_destroy
      parameters:
      - in: path
        name: booking_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this booking.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/change_password/:
    post:
      operationId: api_change_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
  /api/deactivate_acct_verify:
    get:
      operationId: api_deactivate_acct_verify_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - html
          - json
      - in: query
        name: token
        schema:
          type: string
        description: Deactivation token
        required: true
      tags:
      - api
      responses:
        '200':
          description: Account deactivated successfully
        '400':
          description: Invalid or expired token / bad credentials
  /api/login/:
    post:
      operationId: api_login_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/logout/:
    post:
      operationId: api_logout_create
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/profile/:
    get:
      operationId: api_profile_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_profile_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_profile_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_profile_destroy
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/property/:
    get:
      operationId: api_property_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property'
          description: ''
    post:
      operationId: api_property_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Property'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Property'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
  /api/property/{id}:
    get:
      operationId: api_property_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
    put:
      operationId: api_property_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Property'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Property'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
    patch:
      operationId: api_property_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProperty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProperty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProperty'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
    delete:
      operationId: api_property_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/register/:
    post:
      operationId: api_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/reset_password/:
    post:
      operationId: api_reset_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPassword'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
          description: ''
  /api/reset_password_verify:
    get:
      operationId: api_reset_password_verify_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - html
          - json
      - in: query
        name: token
        schema:
          type: string
        description: Deactivation token
        required: true
      tags:
      - api
      responses:
        '200':
          description: Account deactivated successfully
        '400':
          description: Invalid or expired token / bad credentials
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/set_password/:
    post:
      operationId: api_set_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /api/user/{uuid}/:
    get:
      operationId: api_user_retrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - Token
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          description: Account is inactive or not verified
        '403':
          description: Permission denied
    put:
      operationId: api_user_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_user_partial_update
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_user_destroy
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - Token
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: Deactivation success message
        '400':
          description: Account is inactive or not verified
        '403':
          description: Permission denied
  /api/users/:
    get:
      operationId: api_users_list
      tags:
      - api
      security:
      - Token
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
        '400':
          description: Account is inactive or not verified
        '403':
          description: Permission denied
  /api/verify:
    get:
      operationId: api_verify_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - html
          - json
      - in: query
        name: token
        schema:
          type: string
        description: Deactivation token
        required: true
      tags:
      - api
      responses:
        '200':
          description: Account deactivated successfully
        '400':
          description: Invalid or expired token / bad credentials
  /api/verify_update:
    get:
      operationId: api_verify_update_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - html
          - json
      - in: query
        name: token
        schema:
          type: string
        description: Deactivation token
        required: true
      tags:
      - api
      responses:
        '200':
          description: Account deactivated successfully
        '400':
          description: Invalid or expired token / bad credentials
components:
  schemas:
    Booking:
      type: object
      properties:
        booking_id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
        property_id:
          type: string
          format: uuid
          readOnly: true
        start_date:
          type: string
          format: date
          readOnly: true
        end_date:
          type: string
          format: date
          readOnly: true
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        status:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        property:
          type: string
          format: uuid
      required:
      - booking_id
      - created_at
      - end_date
      - property
      - property_id
      - start_date
      - status
      - total_price
      - user
    ChangePassword:
      type: object
      properties:
        old_password:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - old_password
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    PatchedBooking:
      type: object
      properties:
        booking_id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
        property_id:
          type: string
          format: uuid
          readOnly: true
        start_date:
          type: string
          format: date
          readOnly: true
        end_date:
          type: string
          format: date
          readOnly: true
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        status:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        property:
          type: string
          format: uuid
    PatchedProperty:
      type: object
      properties:
        property_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        description:
          type: string
        location:
          type: string
        pricepernight:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUser:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        phone_number:
          type: string
        password:
          type: string
          writeOnly: true
    Property:
      type: object
      properties:
        property_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        description:
          type: string
        location:
          type: string
        pricepernight:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - description
      - location
      - name
      - pricepernight
      - property_id
      - updated_at
    ResetPassword:
      type: object
      properties:
        email:
          type: string
          format: email
          writeOnly: true
      required:
      - email
    SetPassword:
      type: object
      properties:
        email:
          type: string
          format: email
          writeOnly: true
        new_password:
          type: string
          writeOnly: true
      required:
      - email
      - new_password
    User:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        phone_number:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - email
      - first_name
      - last_name
      - password
      - phone_number
      - user_id
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
